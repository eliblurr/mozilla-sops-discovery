#!/bin/sh

# Temporary stash to hold the current state without the staged changes
echo "stashing changes"
git stash save -q --keep-index

fallback() {
    git reset -q HEAD
    git stash pop -q
}

# Function to clean up stash
cleanup() {
    git stash drop -q
}

trap cleanup EXIT
trap fallback INT
trap fallback ERR
# get all paths in sops.config 

FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.\(yaml\|yml\)$')

# Encrypt and replace each staged file
for file in $FILES; do

    # Extract the directory path from $file
    # file_dir=$(dirname "$file")
    # echo "$file_dir"

    # Create the directory structure in $temp_dir
    # mkdir -p "$temp_dir/$file_dir"

    # exclude .sops config file
    if echo "$file" | grep -Eq '\.sops\.y(a)?ml$'; then
        continue
    fi

    # Copy the staged version to the temporary directory
    # echo "copy the staged version to the temporary directory"
    # git show ":$file" > "$temp_dir/$file"

    # Run the encryption command here
    # try to encrypt oonly if it is a yaml
    echo "encrypt temp files"
    # sops -e -i "$temp_dir/$file"
    sops -e -i "$file"

    if [ $? -ne 0 ]; then
        echo "Pre-commit hook failed (command returned error) on file: $file"
        exit 1
    fi

    git add "$file"
done

exit 0