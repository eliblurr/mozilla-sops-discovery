#!/bin/sh

# read sops file to get files
yaml_file="./.sops.yaml"

json_data=$(yq e -o=json "$yaml_file")
length=$(echo $json_data | jq '.creation_rules | length')
paths=""

matches_pattern() {
    local file=$1
    local filename_pattern=$2
    local path_pattern=$3
    [[ "$file" =~ $filename_pattern ]] || [[ "$file" =~ $path_pattern ]]
}

for (( i=0; i<length; i++ ))
do
    
    path_regex=$(echo $json_data | jq -r ".creation_rules[$i].path_regex // empty")
    filename_regex=$(echo $json_data | jq -r ".creation_rules[$i].filename_regex // empty")

    for file in $(find . -type f); do
        if matches_pattern "$file" "$filename_regex" "$path_regex"; then
            remove_substring="./"
            path=${file/$remove_substring/}
            paths+="$path|"
        fi
    done

done

echo "${paths%?}"

# parent_path=$(dirname "$BASH_SOURCE[0]")
# parent_path="${parent_path%/}"
# joined_path="$parent_path/read-sop-config"

# echo $joined_path

# echo "$(dirname "$BASH_SOURCE[0]")"

# read_sops_script="$(dirname "$BASH_SOURCE[0]")"

# echo $(dirname "$BASH_SOURCE[0]")

# # Get the directory where the script is located
# script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# # Get the parent directory of the script
# parent_dir=$(dirname "$script_dir")

# echo $parent_dir

# ls -a . | grep '\.\(yaml\|yml\)$' | grep -v '\.sops\.y\(a\)\?ml$' | grep -Ff <(echo -e "$paths")

# echo $(git diff --cached --name-only --diff-filter=ACM | grep '\.\(yaml\|yml\)$' | grep -v '\.sops\.y\(a\)\?ml$')
# | grep -Ff <(echo -e "$file_paths_string")

